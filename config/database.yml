default: &default
  adapter: postgresql
  encoding: unicode
  username: postgres
  pool: <%= ENV.fetch("RAILS_MAX_THREADS") { 5 } %>รท
  host: <%= ENV.fetch("PGHOST", "localhost") %>

development:
  primary: &primary_development
    <<: *default
    database: forecastly_development
  cache:
    <<: *primary_development
    database: forecastly_cache
    migrations_paths: db/cache_migrate

test:
  <<: *default
  database: forecastly_test
  username: postgres
  # password: password

production:
  primary: &primary_production
    username: postgres
    encoding: unicode
    pool: <%= ENV.fetch("RAILS_MAX_THREADS") { 5 } %>
    url: <%= ENV['DATABASE_URL'] %>
    database: forecastly_production
  cache:
    <<: *primary_production
    database: forecastly_cache
    migrations_paths: db/cache_migrate
  cable:
    <<: *primary_production
    database: forecastly_cable
  queue:
    <<: *primary_production
    database: forecastly_queue

# production:
#   primary: &primary_production
#     adapter: postgresql
#     encoding: unicode
#     username: postgres
#     database: forecastly_production
#   cache:
#     <<: *primary_production
#     database: forecastly_cache
#     migrations_paths: db/cache_migrate
#   cable:
#     <<: *primary_production
#     database: forecastly_cable
#   queue:
#     <<: *primary_production
#     database: forecastly_queue


# Store production database in the storage/ directory, which by default
# is mounted as a persistent Docker volume in config/deploy.yml.
# production:
#   primary:
#     <<: *default
#     database: storage/production.sqlite3
#   cache:
#     <<: *default
#     database: storage/production_cache.sqlite3
#     migrations_paths: db/cache_migrate
#   queue:
#     <<: *default
#     database: storage/production_queue.sqlite3
#     migrations_paths: db/queue_migrate
#   cable:
#     <<: *default
#     database: storage/production_cable.sqlite3
#     migrations_paths: db/cable_migrate
